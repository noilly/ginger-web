{"version":3,"sources":["C:/Users/david/Projects/ginger-web/src async","C:/Users/david/Projects/ginger-web/src/app/app.component.css","C:/Users/david/Projects/ginger-web/src/app/app.component.html","C:/Users/david/Projects/ginger-web/src/app/app.component.ts","C:/Users/david/Projects/ginger-web/src/app/app.module.ts","C:/Users/david/Projects/ginger-web/src/app/gngr-editor/gngr-editor.component.css","C:/Users/david/Projects/ginger-web/src/app/gngr-editor/gngr-editor.component.html","C:/Users/david/Projects/ginger-web/src/app/gngr-editor/gngr-editor.component.ts","C:/Users/david/Projects/ginger-web/src/environments/environment.ts","C:/Users/david/Projects/ginger-web/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/david/Projects/ginger-web/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/david/Projects/ginger-web/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<mat-toolbar color=\\\"accent\\\">\\n  <span>{{title}}</span>\\n</mat-toolbar>\\n<app-gngr-editor fxFill></app-gngr-editor>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/david/Projects/ginger-web/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Gngr';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/david/Projects/ginger-web/src/app/app.component.ts","import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule, MatIconModule, MatMenuModule, MatTabsModule, MatToolbarModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { AceEditorModule } from 'ng2-ace-editor';\nimport { AppComponent } from './app.component';\n// import { D3Service } from 'd3-ng2-service';\nimport { GngrEditorComponent } from './gngr-editor/gngr-editor.component';\nimport { TreeModule } from 'ng2-tree';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GngrEditorComponent\n  ],\n  imports: [\n    AceEditorModule,\n    BrowserAnimationsModule,\n    BrowserModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatIconModule,\n    MatMenuModule,\n    MatTabsModule,\n    MatToolbarModule,\n    TreeModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/david/Projects/ginger-web/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mat-tab-body-wrapper {\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.main {\\r\\n    height: calc(100% - 128px);\\r\\n}\\r\\n\\r\\n.code {\\r\\n    color: blue;\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.token {\\r\\n    color: green;\\r\\n    font-weight: bold;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/david/Projects/ginger-web/src/app/gngr-editor/gngr-editor.component.css\n// module id = ../../../../../src/app/gngr-editor/gngr-editor.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"main\\\" fxLayout=\\\"row\\\">\\r\\n    <div fxFlex=\\\"50\\\" fxLayout=\\\"column\\\">\\r\\n        <mat-toolbar>\\r\\n            <span [style.color]=\\\"hasInterference === true ? 'red' : hasInterference === false ? 'green' : ''\\\">{{interferenceText()}}</span>\\r\\n            <span fxFlex></span>\\r\\n            <button mat-button [matMenuTriggerFor]=\\\"exampleMenu\\\">\\r\\n                Examples\\r\\n            </button>\\r\\n            <mat-menu #exampleMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item (click)=\\\"setCode(codeExamples['assignment'])\\\">Assignment</button>\\r\\n                <button mat-menu-item (click)=\\\"setCode(codeExamples['funcDec'])\\\">Function</button>\\r\\n                <button mat-menu-item (click)=\\\"setCode(codeExamples['input'])\\\">Input &amp; Output</button>\\r\\n            </mat-menu>\\r\\n            <button mat-button (click)=\\\"resendCode()\\\">Analyse</button>\\r\\n            <!-- <button mat-button (click)=\\\"resetCode()\\\" color=\\\"warn\\\" mat-raised-button>Reset</button> -->\\r\\n        </mat-toolbar>\\r\\n        <ace-editor fxFill [(text)]=\\\"text\\\" #editor [mode]=\\\"'gngr'\\\" durationBeforeCallback=\\\"1000\\\" (textChanged)=\\\"onChange($event)\\\"></ace-editor>\\r\\n    </div>\\r\\n    <mat-tab-group fxFlex=\\\"50\\\" dynamicHeight [(selectedIndex)]=\\\"selectedTab\\\" (selectedTabChange)=\\\"selectedTabChange($event)\\\">\\r\\n        <mat-tab label=\\\"AST\\\">\\r\\n            <div fxFlex id=\\\"astNetwork\\\" #astNetwork></div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"DFG\\\">\\r\\n            <div fxFlex id=\\\"dfgNetwork\\\" #dfgNetwork></div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Grammar\\\">\\r\\n            <div class=\\\"padding\\\" fxLayout=\\\"column\\\">\\r\\n                <p>Our grammar is presented in a modified\\r\\n                    <a href=\\\"https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form\\\" target=\\\"_blank\\\">Extended Backus-Naur form (EBNF)</a></p>\\r\\n                <pre>\\r\\n    <span class=\\\"token\\\">char</span>                     =   <span class=\\\"code\\\">a</span> | <span class=\\\"code\\\">b</span> | <span class=\\\"code\\\">c</span> | <span class=\\\"code\\\">d</span> | <span class=\\\"code\\\">e</span> | <span class=\\\"code\\\">f</span> | <span class=\\\"code\\\">g</span> | <span class=\\\"code\\\">h</span> | <span class=\\\"code\\\">i</span> | <span class=\\\"code\\\">j</span> | <span class=\\\"code\\\">k</span> | <span class=\\\"code\\\">l</span>\\r\\n                                   | <span class=\\\"code\\\">m</span> | <span class=\\\"code\\\">n</span> | <span class=\\\"code\\\">o</span> | <span class=\\\"code\\\">p</span> | <span class=\\\"code\\\">q</span> | <span class=\\\"code\\\">r</span> | <span class=\\\"code\\\">s</span> | <span class=\\\"code\\\">t</span> | <span class=\\\"code\\\">u</span> | <span class=\\\"code\\\">v</span> | <span class=\\\"code\\\">w</span>\\r\\n                                   | <span class=\\\"code\\\">x</span> | <span class=\\\"code\\\">y</span> | <span class=\\\"code\\\">z</span>\\r\\n\\r\\n    <span class=\\\"token\\\">identifier</span>               =   <span class=\\\"token\\\">char</span>, &#123; <span class=\\\"token\\\">char</span> &#125;\\r\\n\\r\\n    <span class=\\\"token\\\">annotation</span>               =   <span class=\\\"code\\\">: @high</span> | <span class=\\\"code\\\">: @low</span>\\r\\n\\r\\n    <span class=\\\"token\\\">variable-declaration</span>     =   <span class=\\\"code\\\">var</span> <span class=\\\"token\\\">identifier</span>\\r\\n\\r\\n    <span class=\\\"token\\\">expression</span>               =   <span class=\\\"token\\\">identifier</span>\\r\\n                             =   <span class=\\\"token\\\">expression</span> <span class=\\\"code\\\">+</span> <span class=\\\"token\\\">expression</span>\\r\\n                             =   <span class=\\\"token\\\">function-invocation</span>\\r\\n                             =   <span class=\\\"code\\\">read()</span> [ <span class=\\\"token\\\">annotation</span> ] \\r\\n\\r\\n    <span class=\\\"token\\\">function-declaration</span>     =   <span class=\\\"code\\\">def</span> <span class=\\\"token\\\">identifier</span> <span class=\\\"code\\\">(</span> &#123; <span class=\\\"token\\\">variable-declaration</span> <span class=\\\"code\\\">,</span> &#125; <span class=\\\"code\\\">) &#123;</span> <span class=\\\"token\\\">statement-list</span> <span class=\\\"code\\\">&#125;</span>\\r\\n\\r\\n    <span class=\\\"token\\\">function-invocation</span>      =   <span class=\\\"token\\\">identifier</span> <span class=\\\"code\\\">(</span> &#123; <span class=\\\"token\\\">expression</span> <span class=\\\"code\\\">,</span> &#125; <span class=\\\"code\\\">)</span>\\r\\n\\r\\n    <span class=\\\"token\\\">statement</span>                =   <span class=\\\"token\\\">function-invocation</span>\\r\\n                             =   <span class=\\\"token\\\">identifier</span> <span class=\\\"code\\\">:=</span> <span class=\\\"token\\\">expression</span>\\r\\n                             =   <span class=\\\"code\\\">write(</span> <span class=\\\"token\\\">expression</span> <span class=\\\"code\\\">)</span> [ <span class=\\\"token\\\">annotation</span> ]\\r\\n                             =   <span class=\\\"token\\\">variable-declaration</span>\\r\\n\\r\\n    <span class=\\\"token\\\">statement-list</span>           =   &#123; <span class=\\\"token\\\">statement</span> &#125;\\r\\n\\r\\n    <span class=\\\"token\\\">program</span>                  =   <span class=\\\"token\\\">statement-list</span>\\r\\n                </pre>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n    </mat-tab-group>\\r\\n</div>\\r\\n<!-- <mat-toolbar>\\r\\n    <span fxFlex></span>\\r\\n    <span [style.color]=\\\"hasInterference === true ? 'red' : hasInterference === false ? 'green' : ''\\\">{{interferenceText()}}</span>\\r\\n</mat-toolbar> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/david/Projects/ginger-web/src/app/gngr-editor/gngr-editor.component.html\n// module id = ../../../../../src/app/gngr-editor/gngr-editor.component.html\n// module chunks = 1","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\nimport 'ace-builds/src-min-noconflict/theme-monokai';\nimport 'brace';\nimport 'brace/ext/searchbox';\n// import 'brace/ext/statusbar';\nimport 'brace/mode/gngr';\nimport { Network, DataSet, Node, Edge, IdType } from 'vis';\n// import { D3Service, D3, Selection } from 'd3-ng2-service';\n// import { TreeModel, NodeEvent } from 'ng2-tree';\n\n@Component({\n  selector: 'app-gngr-editor',\n  templateUrl: './gngr-editor.component.html',\n  styleUrls: ['./gngr-editor.component.css']\n})\nexport class GngrEditorComponent implements OnInit {\n  @ViewChild('editor') editor;\n  // public tree: TreeModel;\n  // private d3: D3;\n  // private parentNativeElement: any;\n  // private d3Svg: Selection<SVGSVGElement, any, null, undefined>;\n  // public nodes: Node;\n  // public edges: Edge;\n  // private defaultCode = 'var x\\nx:=1';\n  private network: Network;\n  private canvasWidth;\n  private canvasHeight;\n  private headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n  public hasInterference = null;\n  private server = environment.server;\n\n  codeExamples = {\n    // default: 'var x\\nx := 1',\n    assignment: 'var x\\nvar y\\n\\nx := 1\\ny := x',\n    funcDec: 'var y\\n\\ndef foo(var x) {\\n\\treturn x\\n}\\n\\ny := foo(1)',\n    input: 'var x\\nx := read(): @high\\n\\nwrite(x): @low'\n  };\n\n  selectedTab = 0;\n\n\n  @ViewChild('astNetwork')\n  astNetwork: ElementRef;\n\n  @ViewChild('dfgNetwork')\n  dfgNetwork: ElementRef;\n\n  text = '';\n\n  constructor(private http: HttpClient) {\n    // this.d3 = d3Service.getD3();\n    // this.parentNativeElement = element.nativeElement;\n  }\n\n  handleAST(code) {\n    this.hasInterference = null;\n    // const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    this.http.post(`http://${this.server}/api/lint`, JSON.stringify(code), { headers: this.headers }).subscribe(lintData => {\n      let lintResult = lintData as object[];\n      if (lintResult.length === 0) {\n        this.handleNI(code);\n        this.http.post(`http://${this.server}/api/ast`, JSON.stringify(code), { headers: this.headers }).subscribe(astData => {\n          let treeNodes = [];\n          let treeEdges = [];\n          for (let i = 0; i < (astData['graph']['nodes']).length; i++) {\n            const nodeData = astData['graph']['nodes'][i];\n            treeNodes[i] = {\n              // children: [],\n              id: nodeData['id'],\n              label: nodeData['label']\n            };\n          }\n          treeNodes[0]['level'] = 0;\n          for (let i = 0; i < (astData['graph']['edges']).length; i++) {\n            const edgeData = astData['graph']['edges'][i];\n            treeEdges[i] = {\n              from: Number(edgeData['source']),\n              to: Number(edgeData['target'])\n            };\n\n            const source = treeNodes.filter(function (node) {\n              return node['id'] === edgeData['source'];\n            })[0];\n            treeNodes[Number(edgeData['target'])]['level'] = Number(source['level']) + 1;\n          }\n\n          let container = document.getElementById('astNetwork');\n          let data = {\n            nodes: treeNodes,\n            edges: treeEdges\n          };\n          let options = {\n            autoResize: true,\n            edges: {\n              smooth: {\n                type: 'cubicBezier',\n                forceDirection: 'horizontal',\n                roundness: 0.4\n              }\n            },\n            interaction: {\n              navigationButtons: true\n              // zoomView: false\n            },\n            height: (window.screen.height) + 'px',\n            width: '100%',\n            layout: {\n              hierarchical: {\n                parentCentralization: false,\n                direction: 'UD'\n              }\n            },\n            physics: false\n          };\n          let network = new Network(container, data, options);\n          let viewNodes = treeNodes.filter(function (node) {\n            return node['level'] === 0 || node['level'] === 1;\n          }).map(function (node) {\n            return node['id'];\n          });\n\n          network.fit({\n            animation: true,\n            nodes: viewNodes\n          });\n\n          network.once('initRedraw', function () {\n            network.moveTo({\n              offset: network.getViewPosition()\n            });\n          });\n          // this.tree = treeNodes[0];\n        });\n      } else {\n\n        this.editor.getEditor().getSession().setAnnotations((lintData as Object[]).map(function (error) {\n          return {\n            row: error['row'],\n            text: error['reason'],\n            type: (error['level'] as string).toLocaleLowerCase()\n          };\n        }));\n      }\n    });\n  }\n\n  handleDFG(code) {\n    this.hasInterference = null;\n    // const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    this.http.post(`http://${this.server}/api/lint`, JSON.stringify(code), { headers: this.headers }).subscribe(lintData => {\n      let lintResult = lintData as object[];\n      if (lintResult.length === 0) {\n        this.handleNI(code);\n        this.http.post(`http://${this.server}/api/dfg`, JSON.stringify(code), { headers: this.headers }).subscribe(dfgData => {\n          let treeNodes = [];\n          let treeEdges = [];\n          console.log(dfgData['graph']['edges'])\n          console.log(dfgData['graph']['nodes'])\n          for (let i = 0; i < (dfgData['graph']['nodes']).length; i++) {\n            const nodeData = dfgData['graph']['nodes'][i];\n            treeNodes[i] = {\n              // children: [],\n              group: nodeData['groupId'],\n              id: nodeData['id'],\n              label: nodeData['label']\n            };\n          }\n\n          for (let i = 0; i < (dfgData['graph']['edges']).length; i++) {\n            const edgeData = dfgData['graph']['edges'][i];\n            treeEdges[i] = {\n              from: edgeData['source'],\n              to: edgeData['target']\n            };\n          }\n\n          let container = document.getElementById('dfgNetwork');\n          let data = {\n            nodes: treeNodes,\n            edges: treeEdges\n          };\n          let options = {\n            autoResize: true,\n            edges: {\n              arrows: {\n                to: true\n              },\n              smooth: {\n                type: 'cubicBezier',\n                forceDirection: 'horizontal',\n                roundness: 0.4\n              }\n            },\n            interaction: {\n              navigationButtons: true\n              // zoomView: false\n            },\n            height: (window.screen.height) + 'px',\n            width: '100%',\n            physics: true\n          };\n          let network = new Network(container, data, options);\n          // let viewNodes = treeNodes.filter(function (node) {\n          //   return node['level'] === 0 || node['level'] === 1;\n          // }).map(function (node) {\n          //   return node['id'];\n          // });\n\n          // network.fit({\n          //   animation: true,\n          //   nodes: viewNodes\n          // });\n\n          network.once('initRedraw', function () {\n            network.moveTo({\n              offset: network.getViewPosition()\n            });\n          });\n          // this.tree = treeNodes[0];\n        });\n      } else {\n        this.editor.getEditor().getSession().setAnnotations((lintData as Object[]).map(function (error) {\n          return {\n            row: error['row'],\n            text: error['reason'],\n            type: (error['level'] as string).toLocaleLowerCase()\n          };\n        }));\n      }\n    });\n  }\n\n  handleNI(code) {\n    this.http.post(`http://${this.server}/api/ni`, JSON.stringify(code), { headers: this.headers }).subscribe(niData => {\n      this.hasInterference = niData['hasInterference'];\n    });\n  }\n\n  interferenceText() {\n    let result = '';\n    if (this.hasInterference === true) {\n      result = 'Interference';\n    } else if (this.hasInterference === false) {\n      result = 'No interference';\n    }\n    return result;\n  }\n\n  onChange(code) {\n    localStorage.setItem('code', code);\n    if (this.selectedTab === 0) {\n      this.handleAST(code);\n    } else if (this.selectedTab === 1) {\n      this.handleDFG(code);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.editor.setTheme('monokai');\n    // this.canvasWidth = this.astNetwork.nativeElement.offsetWidth;\n    // this.canvasHeight = this.astNetwork.nativeElement.offsetHeight;\n    // this.canvasWidth = this.dfgNetwork.nativeElement.offsetWidth;\n    // this.canvasHeight = this.dfgNetwork.nativeElement.offsetHeight;\n\n    this.editor.getEditor().setOptions({\n      // enableBasicAutocompletion: true\n      printMargin: false\n    });\n\n    this.editor.getEditor().commands.addCommand({\n      name: 'showOtherCompletions',\n      bindKey: 'Ctrl-.',\n      exec: function (editor) {\n\n      }\n    });\n  }\n\n  ngOnInit() {\n    let storedCode = localStorage.getItem('code');\n\n    if (storedCode) {\n      this.setCode(storedCode);\n    } else {\n      this.setCode(this.codeExamples['assignment']);\n    }\n  }\n\n  resendCode() {\n    this.onChange(this.text);\n  }\n\n  // resetCode() {\n  //   this.setCode( this.codeExamples['default']);\n  // }\n\n  selectedTabChange(event) {\n    this.onChange(this.text);\n  }\n\n  setCode(code) {\n    this.text = code;\n    if (this.text) {\n      this.onChange(this.text);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/david/Projects/ginger-web/src/app/gngr-editor/gngr-editor.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  server: 'localhost:28288'\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/david/Projects/ginger-web/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/david/Projects/ginger-web/src/main.ts"],"sourceRoot":"webpack:///"}